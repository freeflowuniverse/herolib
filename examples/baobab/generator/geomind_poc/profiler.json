{
    "openapi": "3.0.1",
    "info": {
      "title": "Profiler",
      "description": "API for managing user profiles with name, public key, and KYC verification",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:8080",
        "description": "Local development server"
      }
    ],
    "components": {
      "schemas": {
        "Profile": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            },
            "name": {
              "type": "string",
              "example": "Alice Doe"
            },
            "public_key": {
              "type": "string",
              "example": "028a8f8b59f7283a47f9f6d4bc8176e847ad2b6c6d8bdfd041e5e7f3b4ac28c9fc"
            },
            "kyc_verified": {
              "type": "boolean",
              "example": false
            }
          },
          "required": ["id", "name", "public_key", "kyc_verified"]
        },
        "Error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "example": 400
            },
            "message": {
              "type": "string",
              "example": "Invalid request"
            }
          },
          "required": ["code", "message"]
        }
      }
    },
    "paths": {
      "/profiles": {
        "post": {
          "summary": "Create a new profile",
          "operationId": "createProfile",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Bob Smith"
                    },
                    "public_key": {
                      "type": "string",
                      "example": "03a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2"
                    }
                  },
                  "required": ["name", "public_key"]
                },
                "examples": {
                  "newProfile": {
                    "summary": "Example of creating a new profile",
                    "value": {
                      "name": "Bob Smith",
                      "public_key": "03a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Profile created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Profile"
                  },
                  "examples": {
                    "successResponse": {
                      "summary": "Example of successful profile creation",
                      "value": {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "Bob Smith",
                        "public_key": "03a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2",
                        "kyc_verified": false
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "examples": {
                    "invalidInput": {
                      "summary": "Example of invalid input error",
                      "value": {
                        "code": 400,
                        "message": "Invalid public key format"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/profiles/{profileId}": {
        "get": {
          "summary": "Get profile details",
          "operationId": "getProfile",
          "parameters": [
            {
              "name": "profileId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "uint32"
              },
              "example": "42"
            }
          ],
          "responses": {
            "200": {
              "description": "Profile retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Profile"
                  },
                  "examples": {
                    "existingProfile": {
                      "summary": "Example of retrieved profile",
                      "value": {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "Bob Smith",
                        "public_key": "03a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2",
                        "kyc_verified": true
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Profile not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "examples": {
                    "notFound": {
                      "summary": "Example of profile not found error",
                      "value": {
                        "code": 404,
                        "message": "Profile with ID '550e8400-e29b-41d4-a716-446655440000' not found"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/profiles/{profileId}/kyc": {
        "put": {
          "summary": "Update KYC verification status",
          "operationId": "updateKYCStatus",
          "parameters": [
            {
              "name": "profileId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "uint32"
              },
              "example": "42"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "kyc_verified": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "required": ["kyc_verified"]
                },
                "examples": {
                  "verifyKYC": {
                    "summary": "Example of verifying KYC",
                    "value": {
                      "kyc_verified": true
                    }
                  },
                  "unverifyKYC": {
                    "summary": "Example of unverifying KYC",
                    "value": {
                      "kyc_verified": false
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "KYC status updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Profile"
                  },
                  "examples": {
                    "updatedProfile": {
                      "summary": "Example of profile with updated KYC status",
                      "value": {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "name": "Bob Smith",
                        "public_key": "03a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2",
                        "kyc_verified": true
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Profile not found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "examples": {
                    "notFound": {
                      "summary": "Example of profile not found error",
                      "value": {
                        "code": 404,
                        "message": "Profile with ID '550e8400-e29b-41d4-a716-446655440000' not found"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
