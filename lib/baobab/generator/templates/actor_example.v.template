import os
import freeflowuniverse.herolib.baobab.stage
import freeflowuniverse.herolib.core.redisclient
import freeflowuniverse.herolib.schemas.openapi

pub fn new_example() !&@{actor_name_pascal}Actor {
    return &@{actor_name_pascal}Actor {
		Actor: stage.new_actor('example_@{actor_name_snake}')!
    }
}

pub fn (mut a @{actor_name_pascal}Actor) handle_example(method string, data string) !string {
	action := a.act_example(
		name: method
		params: data
	)!
	return action.result
}

// Actor listens to the Redis queue for method invocations
pub fn (mut a @{actor_name_pascal}Actor) run_example() ! {
	mut redis := redisclient.new('localhost:6379') or { panic(err) }
	mut rpc := redis.rpc_get('actor_@{dollar}{a.name}')

	println('Example actor started and listening for tasks...')
	for {
		rpc.process(a.handle)!
		time.sleep(time.millisecond * 100) // Prevent CPU spinning
	}
}
