{
    "openrpc": "1.2.6",
    "info": {
      "title": "Group Manager API",
      "version": "1.0.0",
      "description": "An OpenRPC specification for Group Manager methods"
    },
    "servers": [
      {
        "name": "Local",
        "url": "http://localhost:8080"
      }
    ],
    "methods": [
      {
        "name": "GroupManager.new",
        "summary": "Create a new (in-memory) Group instance",
        "description": "Creates a new group object. Note that this does NOT store it in Redis. The caller must set the group’s GUID and then call `GroupManager.set` if they wish to persist it.",
        "params": [],
        "result": {
          "name": "group",
          "description": "The newly-created group instance",
          "schema": {
            "$ref": "#/components/schemas/Group"
          }
        }
      },
      {
        "name": "GroupManager.set",
        "summary": "Add or update a Group in Redis",
        "description": "Stores the specified group in Redis using the group’s GUID as the key.",
        "params": [
          {
            "name": "group",
            "description": "The group object to store",
            "schema": {
              "$ref": "#/components/schemas/Group"
            }
          }
        ],
        "result": {
          "name": "result",
          "description": "No return value",
          "schema": {
            "type": "null"
          }
        }
      },
      {
        "name": "GroupManager.get",
        "summary": "Retrieve a Group by GUID",
        "description": "Fetches the group from Redis using the provided GUID.",
        "params": [
          {
            "name": "guid",
            "description": "The group’s unique identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "name": "group",
          "description": "The requested group",
          "schema": {
            "$ref": "#/components/schemas/Group"
          }
        }
      },
      {
        "name": "GroupManager.list",
        "summary": "List all Groups",
        "description": "Returns an array containing all groups stored in Redis.",
        "params": [],
        "result": {
          "name": "groups",
          "description": "All currently stored groups",
          "schema": {
            "$ref": "#/components/schemas/GroupList"
          }
        }
      },
      {
        "name": "GroupManager.delete",
        "summary": "Delete a Group by GUID",
        "description": "Removes the specified group from Redis by its GUID.",
        "params": [
          {
            "name": "guid",
            "description": "The group’s unique identifier",
            "schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "name": "result",
          "description": "No return value",
          "schema": {
            "type": "null"
          }
        }
      },
      {
        "name": "GroupManager.add_member",
        "summary": "Add a member to a Group",
        "description": "Adds a user pubkey or another group’s GUID to the member list of the specified group. Does not add duplicates.",
        "params": [
          {
            "name": "guid",
            "description": "The target group’s unique identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member",
            "description": "Pubkey or group GUID to be added to the group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "name": "result",
          "description": "No return value",
          "schema": {
            "type": "null"
          }
        }
      },
      {
        "name": "GroupManager.remove_member",
        "summary": "Remove a member from a Group",
        "description": "Removes a user pubkey or another group’s GUID from the member list of the specified group.",
        "params": [
          {
            "name": "guid",
            "description": "The target group’s unique identifier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member",
            "description": "Pubkey or group GUID to be removed from the group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "name": "result",
          "description": "No return value",
          "schema": {
            "type": "null"
          }
        }
      },
      {
        "name": "GroupManager.get_user_groups",
        "summary": "List Groups that a user belongs to (directly or indirectly)",
        "description": "Checks each group (and nested groups) to see if the user pubkey is a member, returning all groups in which the user is included (including membership through nested groups).",
        "params": [
          {
            "name": "user_pubkey",
            "description": "The pubkey of the user to check",
            "schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "name": "groups",
          "description": "A list of groups to which the user belongs",
          "schema": {
            "$ref": "#/components/schemas/GroupList"
          }
        }
      }
    ],
    "components": {
      "schemas": {
        "Group": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string",
              "description": "Unique ID for the group"
            },
            "name": {
              "type": "string",
              "description": "Name of the group"
            },
            "description": {
              "type": "string",
              "description": "Optional description of the group"
            },
            "members": {
              "type": "array",
              "description": "List of user pubkeys or other group GUIDs",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["guid", "members"]
        },
        "GroupList": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Group"
          }
        }
      }
    }
  }
  