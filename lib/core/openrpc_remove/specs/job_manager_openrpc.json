{
    "openrpc": "1.2.6",
    "info": {
      "title": "JobManager OpenRPC Specification",
      "version": "1.0.0",
      "description": "OpenRPC specification for the JobManager module which handles job operations."
    },
    "servers": [
      {
        "name": "Local",
        "url": "http://localhost:8080/rpc"
      }
    ],
    "methods": [
      {
        "name": "newJob",
        "summary": "Create a new Job instance",
        "description": "Creates a new Job with default/empty values. The GUID is left empty for the caller to fill.",
        "params": [],
        "result": {
          "name": "job",
          "description": "A newly created Job object, not yet persisted.",
          "schema": {
            "$ref": "#/components/schemas/Job"
          }
        }
      },
      {
        "name": "setJob",
        "summary": "Add or update a Job in the system (Redis)",
        "description": "Persists the given Job into the data store. If the GUID already exists, the existing job is overwritten.",
        "params": [
          {
            "name": "job",
            "description": "The Job object to store or update.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Job"
            }
          }
        ],
        "result": {
          "name": "success",
          "description": "Indicates if the operation was successful.",
          "schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "getJob",
        "summary": "Retrieve a Job by its GUID",
        "description": "Fetches an existing Job from the data store using its unique GUID.",
        "params": [
          {
            "name": "guid",
            "description": "The GUID of the Job to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "name": "job",
          "description": "The retrieved Job object.",
          "schema": {
            "$ref": "#/components/schemas/Job"
          }
        }
      },
      {
        "name": "listJobs",
        "summary": "List all Jobs",
        "description": "Returns an array of all Jobs present in the data store.",
        "params": [],
        "result": {
          "name": "jobs",
          "description": "Array of all Job objects found.",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          }
        }
      },
      {
        "name": "deleteJob",
        "summary": "Remove a Job by its GUID",
        "description": "Deletes a specific Job from the data store by its GUID.",
        "params": [
          {
            "name": "guid",
            "description": "The GUID of the Job to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "result": {
          "name": "success",
          "description": "Indicates if the job was successfully deleted.",
          "schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "updateJobStatus",
        "summary": "Update the status of a Job",
        "description": "Sets the status field of a Job in the data store.",
        "params": [
          {
            "name": "guid",
            "description": "The GUID of the Job to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "The new status for the Job.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Status"
            }
          }
        ],
        "result": {
          "name": "job",
          "description": "The updated Job object with new status applied.",
          "schema": {
            "$ref": "#/components/schemas/Job"
          }
        }
      }
    ],
    "components": {
      "schemas": {
        "Job": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string",
              "description": "Unique ID for the Job."
            },
            "agents": {
              "type": "array",
              "description": "Public keys of the agent(s) which will execute the command.",
              "items": {
                "type": "string"
              }
            },
            "source": {
              "type": "string",
              "description": "Pubkey of the agent who requested the job."
            },
            "circle": {
              "type": "string",
              "description": "Digital-life circle name this Job belongs to.",
              "default": "default"
            },
            "context": {
              "type": "string",
              "description": "High-level context for the Job inside a circle.",
              "default": "default"
            },
            "actor": {
              "type": "string",
              "description": "Actor name that will handle the Job (e.g. `vm_manager`)."
            },
            "action": {
              "type": "string",
              "description": "Action to be taken by the actor (e.g. `start`)."
            },
            "params": {
              "type": "object",
              "description": "Key-value parameters for the action to be performed.",
              "additionalProperties": {
                "type": "string"
              }
            },
            "timeout_schedule": {
              "type": "integer",
              "description": "Timeout (in seconds) before the job is picked up by an agent.",
              "default": 60
            },
            "timeout": {
              "type": "integer",
              "description": "Timeout (in seconds) for the job to complete.",
              "default": 3600
            },
            "log": {
              "type": "boolean",
              "description": "Whether to log job details.",
              "default": true
            },
            "ignore_error": {
              "type": "boolean",
              "description": "If true, job errors do not cause an exception to be raised."
            },
            "ignore_error_codes": {
              "type": "array",
              "description": "Array of error codes to ignore.",
              "items": {
                "type": "integer"
              }
            },
            "debug": {
              "type": "boolean",
              "description": "If true, additional debug information is provided.",
              "default": false
            },
            "retry": {
              "type": "integer",
              "description": "Number of retries allowed on error.",
              "default": 0
            },
            "status": {
              "$ref": "#/components/schemas/JobStatus"
            },
            "dependencies": {
              "type": "array",
              "description": "List of job dependencies that must complete before this job executes.",
              "items": {
                "$ref": "#/components/schemas/JobDependency"
              }
            }
          },
          "required": [
            "guid",
            "status"
          ]
        },
        "JobStatus": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string",
              "description": "Unique ID for the Job (mirrors the parent job GUID)."
            },
            "created": {
              "type": "string",
              "format": "date-time",
              "description": "When the job was created."
            },
            "start": {
              "type": "string",
              "format": "date-time",
              "description": "When the job was picked up to start."
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "When the job ended."
            },
            "status": {
              "$ref": "#/components/schemas/Status"
            }
          },
          "required": [
            "guid",
            "created",
            "status"
          ]
        },
        "JobDependency": {
          "type": "object",
          "properties": {
            "guid": {
              "type": "string",
              "description": "Unique ID of the Job this dependency points to."
            },
            "agents": {
              "type": "array",
              "description": "Possible agent(s) who can execute the dependency.",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "guid"
          ]
        },
        "Status": {
          "type": "string",
          "enum": [
            "created",
            "scheduled",
            "planned",
            "running",
            "error",
            "ok"
          ],
          "description": "Enumerates the possible states of a Job."
        }
      }
    }
  }
  